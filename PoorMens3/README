This example explores type extension (sort of subtyping) by
means of polymorphism (to be precise: parametric datatypes).
This technique dates back to Burton:

@article{Burton90,
 author = {F.W.~Burton},
 title = "{Type extension through polymorphism}",
 journal = {TOPLAS},
 volume = {12},
 number = {1},
 year = {1990},
 issn = {0164-0925},
 pages = {135--138},
 doi = {http://doi.acm.org/10.1145/77606.214515},
 publisher = {ACM Press},
}

It is also used, in the restricted way of interface polymorphism for
the import of foreign libraries into Haskell; see reference below. In
that restricted case, no object state is maintained in
Haskell. Therefore, record types with extension points degenerate to
phantom types.

@inproceedings{317790,
 author = {Sigbjorn Finne and Daan Leijen and Erik Meijer and Simon Peyton Jones},
 title = {Calling hell from heaven and heaven from hell},
 booktitle = {ICFP '99: Proceedings of the fourth ACM SIGPLAN international conference on Functional programming},
 year = {1999},
 isbn = {1-58113-111-9},
 pages = {114--125},
 location = {Paris, France},
 doi = {http://doi.acm.org/10.1145/317636.317790},
 publisher = {ACM Press},
 address = {New York, NY, USA},
}
